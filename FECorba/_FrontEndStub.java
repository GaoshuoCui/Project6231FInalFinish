package FECorba;


/**
* FECorba/_FrontEndStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from C:/Users/TLIN/eclipse-workspace/a2.zip_expanded/a2/CORBAa2Lin/FrontEndCorba.idl
* Monday, August 5, 2019 1:22:00 o'clock AM EDT
*/

public class _FrontEndStub extends org.omg.CORBA.portable.ObjectImpl implements FECorba.FrontEnd
{

  public String addEvent (String managerId, String eventId, String eventtype, int capacity)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addEvent", true);
                $out.write_string (managerId);
                $out.write_string (eventId);
                $out.write_string (eventtype);
                $out.write_long (capacity);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addEvent (managerId, eventId, eventtype, capacity        );
            } finally {
                _releaseReply ($in);
            }
  } // addEvent

  public String removeEvent (String managerId, String eventId, String eventtype)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeEvent", true);
                $out.write_string (managerId);
                $out.write_string (eventId);
                $out.write_string (eventtype);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return removeEvent (managerId, eventId, eventtype        );
            } finally {
                _releaseReply ($in);
            }
  } // removeEvent

  public String[] listEventAvailability (String managerId, String eventtype)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listEventAvailability", true);
                $out.write_string (managerId);
                $out.write_string (eventtype);
                $in = _invoke ($out);
                String $result[] = FECorba.listHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listEventAvailability (managerId, eventtype        );
            } finally {
                _releaseReply ($in);
            }
  } // listEventAvailability

  public String bookevent (String customerId, String eventId, String eventtype)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("bookevent", true);
                $out.write_string (customerId);
                $out.write_string (eventId);
                $out.write_string (eventtype);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return bookevent (customerId, eventId, eventtype        );
            } finally {
                _releaseReply ($in);
            }
  } // bookevent

  public String dropevent (String customerId, String eventId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("dropevent", true);
                $out.write_string (customerId);
                $out.write_string (eventId);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return dropevent (customerId, eventId        );
            } finally {
                _releaseReply ($in);
            }
  } // dropevent

  public String[] getbookingSchedule (String customerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getbookingSchedule", true);
                $out.write_string (customerId);
                $in = _invoke ($out);
                String $result[] = FECorba.listHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getbookingSchedule (customerId        );
            } finally {
                _releaseReply ($in);
            }
  } // getbookingSchedule

  public String swapEvent (String customerId, String neweventId, String neweventtype, String oldeventId, String oldeventtype)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("swapEvent", true);
                $out.write_string (customerId);
                $out.write_string (neweventId);
                $out.write_string (neweventtype);
                $out.write_string (oldeventId);
                $out.write_string (oldeventtype);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return swapEvent (customerId, neweventId, neweventtype, oldeventId, oldeventtype        );
            } finally {
                _releaseReply ($in);
            }
  } // swapEvent

  public void shutdown ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("shutdown", false);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                shutdown (        );
            } finally {
                _releaseReply ($in);
            }
  } // shutdown

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FECorba/FrontEnd:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _FrontEndStub
